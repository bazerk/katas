# -*- encoding: utf-8 -*-

"""
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle        Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
Pentagonal      Pn=n(3n−1)/2        1, 5, 12, 22, 35, ...
Hexagonal       Hn=n(2n−1)      1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""

import itertools

max_hexagonal_calculated = 0
h_n = 0
hexagonals = set()
max_pentagonal_calculated = 0
p_n = 0
pentagonals = set()


def _is_pentagonal(tst):
    global max_pentagonal_calculated, p_n
    while tst > max_pentagonal_calculated:
        p_n += 1
        max_pentagonal_calculated = (p_n * (3 * p_n - 1)) / 2
        pentagonals.add(max_pentagonal_calculated)
    return tst in pentagonals


def _is_hexagonal(tst):
    global max_hexagonal_calculated, h_n
    while tst > max_hexagonal_calculated:
        h_n += 1
        max_hexagonal_calculated = h_n * (2 * h_n - 1)
        hexagonals.add(max_hexagonal_calculated)
    return tst in hexagonals


def _iterate_triangles(start_n=1):
    for n in itertools.count(start_n):
        yield (n * (n + 1)) / 2


def problem45():
    for tst in _iterate_triangles(286):
        if _is_pentagonal(tst) and _is_hexagonal(tst):
            return tst


if __name__ == '__main__':
    print problem45()
